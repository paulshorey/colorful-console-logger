{"mappings":"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","sources":["../../.npm/_npx/2994/lib/node_modules/parcel/node_modules/process/browser.js","src/function/destroyCircular.js","src/function/serializeError.js","src/function/CConsoleLog.js","src/index.js","src/cconsole.js"],"sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const destroyCircular = (from, seen) => {\n  // null seen as object\n  if (from === null || from === undefined) {\n    return from\n  }\n  // setup output variable\n  const to = Array.isArray(from) ? [] : {}\n  // reading\n  seen.push(from)\n  // iterate input\n  for (const [key, value] of Object.entries(from)) {\n    if (typeof value === 'function') {\n      continue\n    }\n    if (!value || typeof value !== 'object') {\n      to[key] = value\n      continue\n    }\n    if (!seen.includes(from[key])) {\n      to[key] = destroyCircular(from[key], seen.slice())\n      continue\n    }\n    to[key] = '[Circular]'\n  }\n  const commonProperties = [\n    'name',\n    'message',\n    'stack',\n    'code'\n  ]\n  for (const property of commonProperties) {\n    if (typeof from[property] === 'string') {\n      to[property] = from[property]\n    }\n  }\n  return to\n}\nmodule.exports = destroyCircular\n","const destroyCircular = require('./destroyCircular')\n\nmodule.exports = (value) => {\n  if (typeof value === 'object') {\n    return destroyCircular(value, [])\n  }\n  // People sometimes throw things besides Error objects…\n  if (typeof value === 'function') {\n    // `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n    return `[Function: ${(value.name || 'anonymous')}]`\n  }\n  return value\n}\n","const destroyCircular = require(\"./destroyCircular\");\nconst serializeError = require(\"./serializeError\");\n\n// use \"browser\" colors if in browser\nlet NODEJSCOLORS = typeof window !== \"object\" && typeof process === \"object\";\n// also use \"browser\" colors if in NodeJS with \"--inspect\" or \"--inspect-brk\" flag\n// if (NODEJSCOLORS && process.execArgv.join().includes(\"--inspect\")) {\n//   NODEJSCOLORS = false\n// }\n\n/*\n * Log to console\n */\nmodule.exports = function () {\n  let args = [...arguments];\n  // optionally, pass log-To-Cloud versions of each log action (log,info,error,etc.)\n  if (!this.options) this.options = {};\n  let { logToCloud = {}, useTrace = false, useColor = true, separateTypes = false } = this.options;\n\n  /*\n   * option:\n   * trace file:line, where log originated\n   */\n  let trace = \"\";\n  if (useTrace) {\n    let stack = [];\n    let err = new Error();\n    if (err.stack) {\n      stack = err.stack.split(\"\\n\");\n      if (stack[2]) {\n        // determine file:line which called this console log\n        let str = stack[2];\n        let i_end = str.lastIndexOf(\":\");\n        let i_start_before = str.lastIndexOf(\"/\", i_end - 20) + 1;\n        trace = `(${str.substring(i_start_before, i_end)})`;\n      }\n    }\n  }\n\n  /*\n   * optimize message view\n   */\n  // let hasError = false\n  let a = 0;\n  while (a < args.length) {\n    // if first argument is string, give it a colon \": \"\n    if (a === 0 && typeof args[a] === \"string\") {\n      if (args.length > a + 1) {\n        args[a] += \": \";\n      } else {\n        args[a] += \" \";\n      }\n    }\n    // fix object from being printed as \"[object Object]\"\n    if (typeof args[a] === \"object\") {\n      if (args[a] instanceof Error) {\n        // error object\n        // hasError = true\n        try {\n          // going to assume this is an Error\n          args[a] = serializeError(args[a]);\n          if (typeof args[a] === \"object\") {\n            args[a] = serializeError(args[a].stack);\n          }\n        } catch (e) {\n          // console.error(e)\n        }\n      } else {\n        // regular object\n        // serialize so it does not display changes made after log has printed\n        args[a] = JSON.parse(JSON.stringify(destroyCircular(args[a], [])));\n      }\n    }\n    a++;\n  }\n\n  /*\n   * error - prepare message for output as string\n   */\n  let error_message = \"\";\n  if (this.action === \"error_message\") {\n    args[0] = error_message =\n      args[0] && typeof args[0] === \"string\"\n        ? args[0]\n            .split(\"\\n\")\n            .slice(0, 2)\n            .map((str) => str.replace(/\\/.+\\//g, \"\"))\n            .toString()\n        : \"error\";\n    this.action = \"error\";\n  }\n\n  /*\n   * color1 messages\n   *\n   * on NODE JS\n   * https://en.wikipedia.org/wiki/ANSI_escape_code#Colors <- use \"FG Code\" for text, \"BG Code\" for background\n   *\n   * \\x1b[41m     \\x1b[33m       %s        \\x1b[0m\n   * red bg       yellow text    string    escape for next line\n   *\n   * \\x1b[47m           \\x1b[30m       %s        \\x1b[0m\n   * light grey bg      black text     string    escape for next line\n   */\n  let action = this.action;\n  let color1 = \"\";\n  let color2 = \"\";\n  if (useColor && typeof args[0] === \"string\") {\n    /*\n     * use by NODEJS in terminal\n     */\n    if (NODEJSCOLORS) {\n      switch (this.action) {\n        case \"error\":\n          color1 = \"\\x1b[41m\\x1b[33m%s\\x1b[0m\";\n          break;\n        case \"warn\":\n          color1 = \"\\x1b[43m\\x1b[30m%s\\x1b[0m\";\n          break;\n        case \"info\":\n          color1 = \"\\x1b[46m\\x1b[30m%s\\x1b[0m\";\n          break;\n        case \"debug\":\n          color1 = \"\\x1b[45m\\x1b[30m%s\\x1b[0m\";\n          break;\n        case \"trace\":\n          color1 = \"\\x1b[106m\\x1b[30m%s\\x1b[0m\";\n          break;\n        case \"success\":\n          color1 = \"\\x1b[42m\\x1b[30m%s\\x1b[0m\";\n          this.action = \"log\";\n          break;\n        case \"subtle\":\n          color1 = \"\\x1b[40m\\x1b[90m%s\\x1b[0m\";\n          this.action = \"log\";\n          break;\n      }\n    } else {\n      /*\n       * for use in BROWSER\n       */\n      switch (action) {\n        case \"error\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:red; color:yellow\");\n          break;\n        case \"warn\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:yellow; color:black\");\n          break;\n        case \"log\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:cyan; color:black\");\n          break;\n        case \"info\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:teal; color:black\");\n          break;\n        case \"debug\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:magenta; color:black\");\n          break;\n        case \"trace\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:cyan; color:black\");\n          break;\n        case \"success\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:lawngreen; color:black\");\n          break;\n        case \"subtle\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"color:grey\");\n          break;\n      }\n    }\n  }\n\n  /*\n   * custom actions\n   */\n  switch (action) {\n    case \"success\":\n      action = \"log\";\n      break;\n    case \"subtle\":\n      action = \"log\";\n      break;\n  }\n\n  /*\n   * Add space between different types (groups) of messages\n   *    TODO: maybe upgrade this to use console.group in browser\n   */\n  if (separateTypes) {\n    if (action + this.action !== this.sharedContext.last_action) {\n      console.log(\"\");\n    }\n  }\n\n  /*\n   * Add trace (file-name:line-number)\n   */\n  // log color\n  if (color1) {\n    if (trace) {\n      // color1, trace\n      args = [color1, ...args, trace, color2];\n    } else {\n      // color1, no trace\n      args = [color1, ...args, color2];\n    }\n  } else if (trace) {\n    // no color1, trace\n    args = [...args, trace];\n  }\n\n  /*\n   * Log message to console\n   * use specified action (log, info, debug, warn, etc)\n   */\n  console[action](...args);\n\n  /*\n   * Log original content to cloud\n   */\n  if (logToCloud[action]) {\n    logToCloud[action](...arguments, trace);\n  }\n\n  /*\n   * Add linebreak when different actions back to back\n   * but no linebreak when same action\n   */\n  this.sharedContext.last_action = action + this.action;\n\n  /*\n   * return\n   */\n  if (error_message) {\n    return error_message;\n  }\n};\n","const CConsoleLog = require( \"./function/CConsoleLog\")\n\n/**\n * Log to console, and optionally to your custom cloud functions\n *    In console, will color code each message:\n *        info: green\n *        warn: orange\n *        error: red\n *    Other methods (log, debug, trace, table, are not colored,\n *    because the coloring breaks Chrome developer tools console message)\n *\n * @param options {object} - options and settings\n *    See github project for more documentation and examples.\n * @param options.logToCloud {object} - an object of {key:value{function},} pairs\n *    Ex: {log:function(){}, info:function(){}, etc}\n *    Tested, and works well with LogDNA. `options.logToCloud = logdna.createLogger()`\n *    See github project for more documentation and examples.\n */\nconst cconsoleInit = function(options={}) {\n  // so different actions (log/info/debug/etc) can communicate with eachother:\n  let sharedContext = {}\n  // log\n  let cconsole = {\n    // custom (colorful) loggers\n    log: CConsoleLog.bind({ action: \"log\", options, sharedContext }),\n    info: CConsoleLog.bind({ action: \"info\", options, sharedContext }),\n    debug: CConsoleLog.bind({ action: \"debug\", options, sharedContext }),\n    warn: CConsoleLog.bind({ action: \"warn\", options, sharedContext }),\n    error_message: CConsoleLog.bind({ action: \"error_message\", options, sharedContext }),\n    error: CConsoleLog.bind({ action: \"error\", options, sharedContext }),\n    trace: CConsoleLog.bind({ action: \"trace\", options, sharedContext }),\n    success: CConsoleLog.bind({ action: \"success\", options, sharedContext }),\n    subtle: CConsoleLog.bind({ action: \"subtle\", options, sharedContext }),\n    // pass-through system debugging loggers\n    clear: console.clear,\n    time: console.time,\n    table: console.table,\n    timeEnd: console.timeEnd,\n    timeLog: console.timeLog,\n    assert: console.assert,\n    count: console.count,\n    countReset: console.countReset,\n    dir: console.dir,\n    dirxml: console.dirxml,\n    group: console.group,\n    groupCollapsed: console.groupCollapsed,\n    groupEnd: console.groupEnd\n  }\n  // extra pass-through (default) loggers (non-standard)\n  if (console.profile) {\n    cconsole.profile = console.profile\n  }\n  if (console.profileEnd) {\n    cconsole.profileEnd = console.profileEnd\n  }\n  if (console.timeStamp) {\n    cconsole.timeStamp = console.timeStamp\n  }\n  // return console\n  return cconsole\n}\n\n/*\n * Export cconsole\n */\nmodule.exports = cconsoleInit\n","/*\n * This is for use in Browser - however it will also work in Node (ESM) including Webpack\n */\nconst cconsoleInit = require(\"./index.js\")\n\nif (typeof window === 'object') {\n  window.cconsole = cconsoleInit()\n}\n\nmodule.exports = cconsoleInit()\n"],"names":["$40ab630af50445f0$var$cachedSetTimeout","$40ab630af50445f0$var$cachedClearTimeout","$40ab630af50445f0$var$process","$40ab630af50445f0$exports","$40ab630af50445f0$var$defaultSetTimout","Error","$40ab630af50445f0$var$defaultClearTimeout","$40ab630af50445f0$var$runTimeout","fun","setTimeout","e","call","this","clearTimeout","e1","$40ab630af50445f0$var$currentQueue","$40ab630af50445f0$var$queue","$40ab630af50445f0$var$draining","$40ab630af50445f0$var$queueIndex","$40ab630af50445f0$var$cleanUpNextTick","length","concat","$40ab630af50445f0$var$drainQueue","timeout","len","run","marker","$40ab630af50445f0$var$runClearTimeout","$40ab630af50445f0$var$Item","array","$40ab630af50445f0$var$noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$50d7aa4277cbb60b$var$destroyCircular","from","seen","to","isArray","key","value","Object","entries","includes","slice","commonProperties","property","$50d7aa4277cbb60b$exports","$a2cda4812aa3531b$exports","$ebc01b43a0d2ab5b$var$NODEJSCOLORS","window","$ebc01b43a0d2ab5b$exports","options","logToCloud","useTrace","useColor","separateTypes","trace","stack","err","split","str","i_end","lastIndexOf","i_start_before","substring","a","JSON","parse","stringify","error_message","action","map","replace","toString","color1","color2","splice","sharedContext","last_action","console","log","$cb0424350523ac33$exports","cconsole","bind","info","debug","warn","error","success","subtle","clear","time","table","timeEnd","timeLog","assert","count","countReset","dirxml","group","groupCollapsed","groupEnd","profile","profileEnd","timeStamp"],"version":3,"file":"cconsole.js.map"}