{"mappings":"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","sources":["./node_modules/process/browser.js","./src/function/destroyCircular.js","./src/function/serializeError.js","./src/function/CConsoleLog.js","./index.js","./src/index.js"],"sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const destroyCircular = (from, seen) => {\n  // null seen as object\n  if (from === null || from === undefined) {\n    return from\n  }\n  // setup output variable\n  const to = Array.isArray(from) ? [] : {}\n  // reading\n  seen.push(from)\n  // iterate input\n  for (const [key, value] of Object.entries(from)) {\n    if (typeof value === 'function') {\n      continue\n    }\n    if (!value || typeof value !== 'object') {\n      to[key] = value\n      continue\n    }\n    if (!seen.includes(from[key])) {\n      to[key] = destroyCircular(from[key], seen.slice())\n      continue\n    }\n    to[key] = '[Circular]'\n  }\n  const commonProperties = [\n    'name',\n    'message',\n    'stack',\n    'code'\n  ]\n  for (const property of commonProperties) {\n    if (typeof from[property] === 'string') {\n      to[property] = from[property]\n    }\n  }\n  return to\n}\nexport default destroyCircular","import destroyCircular from './destroyCircular'\n\nexport default (value) => {\n  if (typeof value === 'object') {\n    return destroyCircular(value, [])\n  }\n  // People sometimes throw things besides Error objects…\n  if (typeof value === 'function') {\n    // `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n    return `[Function: ${(value.name || 'anonymous')}]`\n  }\n  return value\n}","import destroyCircular from \"./destroyCircular\"\nimport serializeError from \"./serializeError\"\n\n// use \"browser\" colors if in browser\nlet NODEJSCOLORS = typeof window !== \"object\"\n// also use \"browser\" colors if in NodeJS with \"--inspect\" or \"--inspect-brk\" flag\nif (NODEJSCOLORS && process.execArgv.join().includes(\"--inspect\")) {\n  NODEJSCOLORS = false\n}\n\n/*\n * Log to console\n */\nexport default function () {\n  let args = [...arguments]\n  // optionally, pass log-To-Cloud versions of each log action (log,info,error,etc.)\n  if (!this.options) this.options={}\n  let { logToCloud = {}, useTrace = false, useColor = true, separateTypes = true } = this.options\n\n  /*\n   * option:\n   * trace file:line, where log originated\n   */\n  let trace = \"\"\n  if (useTrace) {\n    let stack = []\n    let err = new Error()\n    if (err.stack) {\n      stack = err.stack.split(\"\\n\")\n      if (stack[2]) {\n        // determine file:line which called this console log\n        let str = stack[2]\n        let i_end = str.lastIndexOf(\":\")\n        let i_start_before = str.lastIndexOf(\"/\", i_end - 20) + 1\n        trace = `(${str.substring(i_start_before, i_end)})`\n      }\n    }\n  }\n\n  /*\n   * optimize message view\n   */\n  let hasError = false\n  let a = 0\n  while (a < args.length) {\n    // if first argument is string, give it a colon \": \"\n    if (a === 0 && typeof args[a] === \"string\") {\n      if (args.length > a + 1) {\n        args[a] += \": \"\n      } else {\n        args[a] += \" \"\n      }\n    }\n    // fix object from being printed as \"[object Object]\"\n    if (typeof args[a] === \"object\") {\n      if (args[a] instanceof Error) {\n        // error object\n        hasError = true\n        try {\n          // going to assume this is an Error\n          args[a] = serializeError(args[a])\n          if (typeof args[a] === \"object\") {\n            args[a] = serializeError(args[a].stack)\n          }\n        } catch (e) {}\n      } else {\n        // regular object\n        // serialize so it does not display changes made after log has printed\n        args[a] = JSON.parse(JSON.stringify(destroyCircular(args[a], [])))\n      }\n    }\n    a++\n  }\n\n  /*\n   * error - prepare message for output as string\n   */\n  let error_message = ''\n  if (this.action==='error_message') {\n    args[0] = error_message = (args[0] && typeof args[0] === 'string') ? args[0].split('\\n').slice(0,2).map(str=>str.replace(/\\/.+\\//g,'')).toString() : 'error'\n    this.action = 'error'\n  }\n\n  /*\n   * color1 messages\n   *\n   * on NODE JS\n   * https://en.wikipedia.org/wiki/ANSI_escape_code#Colors <- use \"FG Code\" for text, \"BG Code\" for background\n   *\n   * \\x1b[41m     \\x1b[33m       %s        \\x1b[0m\n   * red bg       yellow text    string    escape for next line\n   *\n   * \\x1b[47m           \\x1b[30m       %s        \\x1b[0m\n   * light grey bg      black text     string    escape for next line\n   */\n  let action = this.action\n  let color1 = \"\"\n  let color2 = \"\"\n  if (useColor && typeof args[0] === \"string\") {\n    /*\n     * use by NODEJS in terminal\n     */\n    if (NODEJSCOLORS) {\n      switch (this.action) {\n        case \"error\":\n          color1 = \"\\x1b[41m\\x1b[33m%s\\x1b[0m\"\n          break\n        case \"warn\":\n          color1 = \"\\x1b[43m\\x1b[30m%s\\x1b[0m\"\n          break\n        case \"info\":\n          color1 = \"\\x1b[46m\\x1b[30m%s\\x1b[0m\"\n          break\n        case \"debug\":\n          color1 = \"\\x1b[45m\\x1b[30m%s\\x1b[0m\"\n          break\n        case \"trace\":\n          color1 = \"\\x1b[106m\\x1b[30m%s\\x1b[0m\"\n          break\n        case \"success\":\n          color1 = \"\\x1b[42m\\x1b[30m%s\\x1b[0m\"\n          this.action = \"log\"\n          break\n        case \"subtle\":\n          color1 = \"\\x1b[40m\\x1b[90m%s\\x1b[0m\"\n          this.action = \"log\"\n          break\n      }\n    } else {\n      /*\n       * for use in BROWSER\n       */\n      switch (action) {\n        case \"error\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:red; color:yellow\")\n          break\n        case \"warn\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:yellow; color:black\")\n          break\n        case \"info\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:teal; color:black\")\n          break\n        case \"debug\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:magenta; color:black\")\n          break\n        case \"trace\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:cyan; color:black\")\n          break\n        case \"success\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:lawngreen; color:black\")\n          break\n        case \"subtle\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"color:grey\")\n          break\n      }\n    }\n  }\n\n  /*\n   * custom actions\n   */\n  switch (action) {\n    case \"success\":\n      action = \"log\"\n      break\n    case \"subtle\":\n      action = \"log\"\n      break\n  }\n\n  /*\n   * Add space between different types (groups) of messages\n   *    TODO: maybe upgrade this to use console.group in browser\n   */\n  if (separateTypes) {\n    if (action + this.action !== this.sharedContext.last_action) {\n      console.log(\"\")\n    }\n  }\n\n  /*\n   * Log message to console\n   * use specified action (log, info, debug, warn, etc)\n   */\n  // log color\n  if (color1) {\n    if (trace) {\n      // color1, trace\n      args = [color1, ...args, trace, color2]\n    } else {\n      // color1, no trace\n      args = [color1, ...args, color2]\n    }\n  } else if (trace) {\n    // no color1, trace\n    args = [...args, trace]\n  } else {\n    // no color1, no trace\n    args = [...args]\n  }\n  // log content\n  console[action](...args)\n\n  /*\n   * Log original content to cloud\n   */\n  if (logToCloud[action]) {\n    logToCloud[action](...arguments, trace)\n  }\n\n  /*\n   * Add linebreak when different actions back to back\n   * but no linebreak when same action\n   */\n  this.sharedContext.last_action = action + this.action\n\n  /*\n   * return\n   */\n  if (error_message) {\n    return error_message\n  }\n}\n","import cconsoleInit from \"./src/index.js\"\n\nif (typeof window === 'object') {\n  window.cconsole = cconsoleInit\n}\n\nexport default cconsoleInit\n","import CConsoleLog from \"./function/CConsoleLog\"\n\n/**\n * Log to console, and optionally to your custom cloud functions\n *    In console, will color code each message:\n *        info: green\n *        warn: orange\n *        error: red\n *    Other methods (log, debug, trace, table, are not colored,\n *    because the coloring breaks Chrome developer tools console message)\n *\n * @param options {object} - options and settings\n *    See github project for more documentation and examples.\n * @param options.logToCloud {object} - an object of {key:value{function},} pairs\n *    Ex: {log:function(){}, info:function(){}, etc}\n *    Tested, and works well with LogDNA. `options.logToCloud = logdna.createLogger()`\n *    See github project for more documentation and examples.\n */\nconst cconsoleInit = function(options={}) {\n  // so different actions (log/info/debug/etc) can communicate with eachother:\n  let sharedContext = {}\n  // log\n  let cconsole = {\n    // custom (colorful) loggers\n    log: CConsoleLog.bind({ action: \"log\", options, sharedContext }),\n    info: CConsoleLog.bind({ action: \"info\", options, sharedContext }),\n    debug: CConsoleLog.bind({ action: \"debug\", options, sharedContext }),\n    warn: CConsoleLog.bind({ action: \"warn\", options, sharedContext }),\n    error_message: CConsoleLog.bind({ action: \"error_message\", options, sharedContext }),\n    error: CConsoleLog.bind({ action: \"error\", options, sharedContext }),\n    table: CConsoleLog.bind({ action: \"table\", options, sharedContext }),\n    trace: CConsoleLog.bind({ action: \"trace\", options, sharedContext }),\n    success: CConsoleLog.bind({ action: \"success\", options, sharedContext }),\n    subtle: CConsoleLog.bind({ action: \"subtle\", options, sharedContext }),\n    // pass-through (default) loggers (standard)\n    clear: console.clear,\n    time: console.time,\n    timeEnd: console.timeEnd,\n    timeLog: console.timeLog,\n    assert: console.assert,\n    count: console.count,\n    countReset: console.countReset,\n    dir: console.dir,\n    dirxml: console.dirxml,\n    group: console.group,\n    groupCollapsed: console.groupCollapsed,\n    groupEnd: console.groupEnd\n  }\n  // extra pass-through (default) loggers (non-standard)\n  if (console.profile) {\n    cconsole.profile = console.profile\n  }\n  if (console.profileEnd) {\n    cconsole.profileEnd = console.profileEnd\n  }\n  if (console.timeStamp) {\n    cconsole.timeStamp = console.timeStamp\n  }\n  // return console\n  return cconsole\n}\n\n/*\n * Export cconsole\n */\nexport default cconsoleInit\n"],"names":["cachedSetTimeout","cachedClearTimeout","process","$158311b2aa5684fd2093dcce5f5b408b$exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","destroyCircular","from","seen","to","isArray","_i","_Object$entries","Object","entries","_Object$entries$_i","$94dc2ca918b8485d204fffa946fb98c4$var$_slicedToArray","key","value","$94dc2ca918b8485d204fffa946fb98c4$var$_typeof","includes","slice","_i2","_commonProperties","property","$2611f0b93b6dd1619e7aaee6e7a56b05$var$_typeof","$94dc2ca918b8485d204fffa946fb98c4$export$default","NODEJSCOLORS","window","$4b772af867a634bc5e63567be2e3e74c$var$_typeof","execArgv","join","_console","options","_this$options","_this$options$logToCl","logToCloud","_this$options$useTrac","useTrace","_this$options$useColo","useColor","_this$options$separat","separateTypes","trace","stack","err","split","str","i_end","lastIndexOf","i_start_before","substring","a","$2611f0b93b6dd1619e7aaee6e7a56b05$export$default","JSON","parse","stringify","error_message","action","map","replace","toString","color1","color2","splice","sharedContext","last_action","console","log","$4b772af867a634bc5e63567be2e3e74c$var$_toConsumableArray","$2e81e1061303452ef96972f803b9630d$var$_typeof","cconsole","undefined","$4b772af867a634bc5e63567be2e3e74c$export$default","bind","info","debug","warn","error","table","success","subtle","clear","time","timeEnd","timeLog","assert","count","countReset","dirxml","group","groupCollapsed","groupEnd","profile","profileEnd","timeStamp"],"version":3,"file":"index.js.map"}